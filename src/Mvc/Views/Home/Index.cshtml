@using Mvc.Controllers
@model IEnumerable<Item>

@{
    ViewData["Title"] = "Home Page";
}

<article>
    <header>
        <h3 style="margin: 0;">Add new Item</h3>
    </header>

    <form id="form"
          hx-post="@HomeController.AddItemRoute" hx-target="#items" hx-swap="afterbegin"
          hx-on:htmx:before-request="disableForm('#form')"
          hx-on:htmx:after-request="clearForm('#form')"
    >
        <div class="grid">         
            <label>
                Key
                <input type="text" name="@nameof(Item.Key)" required>
            </label>
            <label>
                Value
                <input type="number" name="@nameof(Item.Value)" value="0">
            </label>
        </div>
 
        <button type="submit"">Submit</button>
    </form>
</article>

<div id="items" class="grid">
    @foreach (var item in Model)
    {
        @await HomeController.ItemPartial.Render(Html, item)
    }
</div>

@section Scripts {
    <script>
        function clearForm(selector) {
            const form = document.querySelector(selector);
            form.reset();

            const submit = form.querySelector("[type='submit']")
            submit.disabled = false;
        }

        function disableForm(selector) {
            console.log("disable")
            const form = document.querySelector(selector);
            const submit = form.querySelector("[type='submit']")
            console.log(submit)
            submit.disabled = true;
        }
    </script>

    <script type="module">
        import autoAnimate from 'https://cdn.jsdelivr.net/npm/@@formkit/auto-animate'
        autoAnimate(document.getElementById('items'))
    </script>
}